{"version":3,"sources":["data/actions.ts","data/state/reducer.ts","data/state/StoreContext.ts","assets/icons/GoogleIcon.tsx","components/FirebaseAuth/FirebaseAuth.tsx","components/Auth/PageAuth.tsx","components/BudgetTable/BudgetTable.tsx","components/RemainingPeriodAmount/RemainingPeriodAmount.tsx","components/TransactionInput/TransactionInput.tsx","data/selectors.ts","firebaseSetup.ts","secret.ts","data/api/budget.ts","data/utils/budget.ts","components/BudgetPage/BudgetPage.tsx","hooks/useFirebaseAuth.tsx","App.tsx","serviceWorker.ts","index.tsx","data/state/StoreProvider.tsx"],"names":["ActionTypes","initialState","reducer","state","arguments","length","undefined","action","type","budget","periods","currentPeriod","slice","previousPeriods","updatedTransactions","concat","Object","toConsumableArray","transactions","payload","transaction","updatedCurrentPeriod","objectSpread","updatedPeriods","me","user","StoreContext","createContext","actionCreators","GoogleIcon","_ref","_ref$className","className","react_default","a","createElement","SvgIcon","d","FirebaseAuth","useEffect","provider","firebase","GoogleAuthProvider","signInWithRedirect","withStyles","theme","paper","padding","textAlign","icon","marginRight","_ref$classes","classes","_useState","useState","_useState2","slicedToArray","loginProvider","setLoginProvider","components_FirebaseAuth_FirebaseAuth","Grid","container","spacing","justify","alignItems","item","xs","Paper","Fab","color","variant","onClick","icons_GoogleIcon","getBudgetTableRows","map","TableRow","id","TableCell","amount","transactor","name","category","note","BudgetTable","props","Table","TableHead","TableBody","heading","fontSize","fontWeight","margin","remainingAmount","startingAmount","reduce","total","TransactionInput","onSubmit","setAmount","_useState3","_useState4","setCategory","_useState5","_useState6","setNote","otherFields","accessToken","objectWithoutProperties","getMeWithoutCreds","useContext","handleSubmit","event","parsedAmount","parseFloat","submitAmount","isNaN","uuidv4","TextField","label","value","onChange","currentTarget","Button","size","AttachMoney_default","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","unsubscribe","firestore","fetchBudget","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","collection","doc","get","sent","abrupt","stop","_x","apply","this","postBudget","update","addTransactionToBudget","budgetToModify","newTransaction","getPreviousPeriods","getCurrentPeriod","_useContext","getBudget","onUpdate","snap","updatedBudget","budgetLoaded","onSnapshot","then","fetchedBudget","onSubmitTransaction","_ref2","modifiedBudget","components_RemainingPeriodAmount_RemainingPeriodAmount","components_TransactionInput_TransactionInput","components_BudgetTable_BudgetTable","useFirebaseAuth","getRedirectResult","result","credential","Error","cred","_result$user","uid","displayName","email","currentUserLoaded","catch","error","errorCode","code","errorMessage","message","console","warn","JSON","stringify","appRoot","backgroundColor","height","width","getMe","appContent","components_BudgetPage_BudgetPage","Auth_PageAuth","Boolean","window","location","hostname","match","ReactDOM","render","children","_useReducer","useReducer","budgeteeringReducer","_useReducer2","dispatch","addTransaction","TransactionAdd","CurrentUserLoaded","BudgetLoaded","useActions","log","newState","state_StoreContext","Provider","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03c3455d.chunk.js","sourcesContent":["import { Dispatch } from 'react';\r\nimport { Budget, Transaction, UserWithCredentials } from './types';\r\nimport { BudgeteeringState } from './types/state';\r\n\r\nexport type BudgeteeringAction = AddTransactionAction | CurrentUserLoaded | BudgetLoadedAction;\r\n\r\nexport enum ActionTypes {\r\n  TransactionAdd = 'TRANSACTION.ADD',\r\n  CurrentUserLoaded = 'CURRENT_USER.LOADED',\r\n  BudgetLoaded = 'BUDGET.LOADED',\r\n}\r\n\r\nexport interface BudgeteeringActionCreators {\r\n  addTransaction(transaction: Transaction): void;\r\n  currentUserLoaded(user: UserWithCredentials): void;\r\n  budgetLoaded(budget: Budget): void;\r\n}\r\n\r\nexport interface AddTransactionAction {\r\n  type: ActionTypes.TransactionAdd;\r\n  payload: {\r\n    transaction: Transaction;\r\n  };\r\n}\r\n\r\nexport interface CurrentUserLoaded {\r\n  type: ActionTypes.CurrentUserLoaded;\r\n  payload: {\r\n    user: UserWithCredentials;\r\n  };\r\n}\r\n\r\nexport interface BudgetLoadedAction {\r\n  type: ActionTypes.BudgetLoaded;\r\n  payload: {\r\n    budget: Budget;\r\n  };\r\n}\r\n\r\nexport const useActions = (\r\n  state: BudgeteeringState,\r\n  dispatch: Dispatch<BudgeteeringAction>\r\n): BudgeteeringActionCreators => ({\r\n  addTransaction: (transaction: Transaction) =>\r\n    dispatch({\r\n      type: ActionTypes.TransactionAdd,\r\n      payload: {\r\n        transaction,\r\n      },\r\n    }),\r\n  currentUserLoaded: (user: UserWithCredentials) =>\r\n    dispatch({\r\n      type: ActionTypes.CurrentUserLoaded,\r\n      payload: {\r\n        user,\r\n      },\r\n    }),\r\n  budgetLoaded: (budget: Budget) =>\r\n    dispatch({\r\n      type: ActionTypes.BudgetLoaded,\r\n      payload: {\r\n        budget,\r\n      },\r\n    }),\r\n});\r\n","import { BudgeteeringAction } from '../actions';\r\nimport { BudgeteeringState } from '../types/state';\r\n\r\nexport const initialState: BudgeteeringState = {};\r\n\r\nconst reducer = (state: BudgeteeringState = initialState, action: BudgeteeringAction) => {\r\n  switch (action.type) {\r\n    case 'TRANSACTION.ADD':\r\n      if (!state.budget || !state.budget.periods.length) {\r\n        return state;\r\n      }\r\n\r\n      const currentPeriod = state.budget.periods.slice(-1)[0];\r\n      const previousPeriods = state.budget.periods.slice(0, -1);\r\n      const updatedTransactions = [...currentPeriod.transactions, action.payload.transaction];\r\n      const updatedCurrentPeriod = {\r\n        ...currentPeriod,\r\n        transactions: updatedTransactions,\r\n      };\r\n      const updatedPeriods = [...previousPeriods, updatedCurrentPeriod];\r\n\r\n      return {\r\n        ...state,\r\n        budget: {\r\n          ...state.budget,\r\n          periods: updatedPeriods,\r\n        },\r\n      };\r\n    case 'CURRENT_USER.LOADED':\r\n      return {\r\n        ...state,\r\n        me: action.payload.user,\r\n      };\r\n    case 'BUDGET.LOADED':\r\n      return {\r\n        ...state,\r\n        budget: action.payload.budget,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { BudgeteeringActionCreators } from 'data/actions';\r\nimport { BudgeteeringState } from 'data/types/state';\r\nimport { createContext } from 'react';\r\nimport { initialState } from './reducer';\r\n\r\nconst StoreContext = createContext<{\r\n  state: BudgeteeringState;\r\n  actionCreators: BudgeteeringActionCreators;\r\n}>({ state: initialState, actionCreators: {} as BudgeteeringActionCreators });\r\n\r\nexport default StoreContext;\r\n","import { SvgIcon } from '@material-ui/core';\r\nimport React, { FC } from 'react';\r\n\r\nexport interface GoogleIconProps {\r\n  className?: string;\r\n}\r\n\r\nconst GoogleIcon: FC<GoogleIconProps> = ({ className = '' }) => (\r\n  <SvgIcon className={className}>\r\n    <path d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\" />\r\n  </SvgIcon>\r\n);\r\n\r\nexport default GoogleIcon;\r\n","// const firebase = require('firebase');\r\nimport * as firebase from 'firebase';\r\nimport { FC, useEffect } from 'react';\r\n\r\nconst FirebaseAuth: FC = () => {\r\n  useEffect(() => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithRedirect(provider);\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default FirebaseAuth;\r\n","import { Fab, Grid, Paper } from '@material-ui/core';\r\nimport { StyledComponentProps, withStyles } from '@material-ui/core/styles';\r\nimport GoogleIcon from 'assets/icons/GoogleIcon';\r\nimport FirebaseAuth from 'components/FirebaseAuth';\r\nimport React, { FC, useState } from 'react';\r\n\r\nconst styles = (theme: any) => ({\r\n  paper: {\r\n    padding: '16px',\r\n    textAlign: 'center' as 'center',\r\n  },\r\n  icon: {\r\n    marginRight: '12px',\r\n  },\r\n});\r\n\r\ntype LoginProvider = 'notSelected' | 'google';\r\n\r\nconst PageAuth: FC<StyledComponentProps> = ({ classes = {} }) => {\r\n  const [loginProvider, setLoginProvider] = useState('notSelected' as LoginProvider);\r\n\r\n  const onGoogleAuthClick = () => {\r\n    setLoginProvider('google');\r\n  };\r\n\r\n  switch (loginProvider) {\r\n    case 'google':\r\n      return <FirebaseAuth />;\r\n    default:\r\n      return (\r\n        <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <h1>Budgeteering</h1>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <h3>Choose your login provider...</h3>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Fab color=\"primary\" variant=\"extended\" onClick={onGoogleAuthClick}>\r\n                <GoogleIcon className={classes.icon} />\r\n                Login with Google\r\n              </Fab>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(PageAuth);\r\n","import Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport React, { FC } from 'react';\r\nimport { Transaction } from '../../data/types';\r\n\r\nexport interface BudgetTableProps {\r\n  transactions: Transaction[];\r\n}\r\n\r\nconst BudgetTable: FC<BudgetTableProps> = (props: BudgetTableProps) => {\r\n  return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Amount</TableCell>\r\n          <TableCell>User Name</TableCell>\r\n          <TableCell>Category</TableCell>\r\n          <TableCell>Note</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>{getBudgetTableRows(props.transactions)}</TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nconst getBudgetTableRows = (transactions: Transaction[]) =>\r\n  transactions.map(transaction => (\r\n    <TableRow id={transaction.id}>\r\n      <TableCell>{transaction.amount}</TableCell>\r\n      <TableCell>{transaction.transactor.name}</TableCell>\r\n      <TableCell>{transaction.category}</TableCell>\r\n      <TableCell>{transaction.note}</TableCell>\r\n    </TableRow>\r\n  ));\r\n\r\nexport default BudgetTable;\r\n","import { Grid, StyledComponentProps, withStyles } from '@material-ui/core';\r\nimport { Transaction } from 'data/types';\r\nimport React, { FC } from 'react';\r\n\r\nexport interface RemainingPeriodAmountProps {\r\n  transactions: Transaction[];\r\n  startingAmount: number;\r\n}\r\n\r\nconst styles = (theme: any) => ({\r\n  heading: {\r\n    color: '#b3b3b3',\r\n    fontSize: 16,\r\n    fontWeight: 'bold' as 'bold',\r\n    margin: '0.25em',\r\n  },\r\n  remainingAmount: {\r\n    fontWeight: 'bold' as 'bold',\r\n    fontSize: 32,\r\n    margin: '0.25em',\r\n  },\r\n});\r\n\r\nconst RemainingPeriodAmount: FC<RemainingPeriodAmountProps & StyledComponentProps> = ({\r\n  transactions,\r\n  startingAmount,\r\n  classes = {},\r\n}) => {\r\n  const transactionsTotal = transactions.reduce((total, transaction) => total + transaction.amount, 0);\r\n  const remainingAmount = startingAmount - transactionsTotal;\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <p className={classes.heading}>Remaining</p>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <p className={classes.remainingAmount}>{remainingAmount}</p>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(RemainingPeriodAmount);\r\n","import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AttachMoney from '@material-ui/icons/AttachMoney';\r\nimport { getMeWithoutCreds } from 'data/selectors';\r\nimport StoreContext from 'data/state/StoreContext';\r\nimport { Transaction } from 'data/types';\r\nimport React, { ChangeEvent, FC, FormEvent, useContext, useState } from 'react';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nexport interface TransactionInputProps {\r\n  onSubmit(transaction: Transaction): void;\r\n}\r\n\r\nconst TransactionInput: FC<TransactionInputProps> = ({ onSubmit }) => {\r\n  const [amount, setAmount] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [note, setNote] = useState('');\r\n\r\n  const { state } = useContext(StoreContext);\r\n  const me = getMeWithoutCreds(state);\r\n\r\n  const clearForm = () => {\r\n    setAmount('');\r\n    setCategory('');\r\n    setNote('');\r\n  };\r\n\r\n  const handleAmountChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(event.currentTarget.value);\r\n  };\r\n\r\n  const handleCategoryChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setCategory(event.currentTarget.value);\r\n  };\r\n\r\n  const handleNoteChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setNote(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (event: FormEvent<HTMLElement>) => {\r\n    const parsedAmount = parseFloat(amount);\r\n    const submitAmount = isNaN(parsedAmount) ? 0 : parsedAmount;\r\n\r\n    onSubmit({\r\n      id: uuidv4(),\r\n      amount: submitAmount,\r\n      transactor: me,\r\n      category,\r\n      note,\r\n    });\r\n\r\n    clearForm();\r\n  };\r\n\r\n  return (\r\n    <Grid container={true} spacing={4} justify=\"center\" alignItems=\"center\">\r\n      <Grid item={true}>\r\n        <TextField label=\"Amount\" value={amount} onChange={handleAmountChange} />\r\n      </Grid>\r\n      <Grid item={true}>\r\n        <TextField label=\"Category\" value={category} onChange={handleCategoryChange} />\r\n      </Grid>\r\n      <Grid item={true}>\r\n        <TextField label=\"Note\" value={note} onChange={handleNoteChange} />\r\n      </Grid>\r\n      <Grid item={true}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"medium\"\r\n          onClick={event => {\r\n            handleSubmit(event);\r\n          }}\r\n        >\r\n          <AttachMoney />\r\n          Spend\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TransactionInput;\r\n","import { User, UserWithCredentials } from './types';\r\nimport { BudgeteeringState } from './types/state';\r\n\r\nexport const getBudget = (state: BudgeteeringState) => state.budget;\r\n\r\nexport const getCurrentPeriod = (state: BudgeteeringState) => {\r\n  if (!state.budget) {\r\n    return null;\r\n  }\r\n\r\n  return state.budget.periods[state.budget.periods.length - 1];\r\n};\r\n\r\nexport const getMe = (state: BudgeteeringState): UserWithCredentials | undefined => state.me;\r\n\r\nexport const getMeWithoutCreds = (state: BudgeteeringState): User => {\r\n  const { accessToken, ...otherFields } = state.me as UserWithCredentials;\r\n  return {\r\n    ...otherFields,\r\n  };\r\n};\r\n","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { firebaseConfig } from './secret';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\n","export const firebaseConfig = {\r\n  apiKey: 'AIzaSyBZn-wkt-nRt9TwSZnvKd28jT4vy7ySgm4',\r\n  authDomain: 'budgeteering-70f5d.firebaseapp.com',\r\n  databaseURL: 'https://budgeteering-70f5d.firebaseio.com',\r\n  projectId: 'budgeteering-70f5d',\r\n  storageBucket: 'budgeteering-70f5d.appspot.com',\r\n  messagingSenderId: '473484708291',\r\n  appId: '1:473484708291:web:bf62d1245ff200c0',\r\n};\r\n","import { Budget } from 'data/types';\r\nimport { firestore } from '../../firebaseSetup';\r\n\r\nlet unsubscribe: () => void;\r\n\r\nexport const fetchBudget = async (id: string) => {\r\n  const budget = await firestore\r\n    .collection('budget')\r\n    .doc(id)\r\n    .get();\r\n\r\n  const data = budget.data() as Budget | null;\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport const postBudget = (budget: Budget) => firestore.doc(`budget/${budget.id}`).update(budget);\r\n\r\nexport const subscribeToBudget = (id: string, onUpdate: (snap: firebase.firestore.DocumentSnapshot) => void) => {\r\n  unsubscribe = firestore\r\n    .collection('budget')\r\n    .doc(id)\r\n    .onSnapshot(onUpdate);\r\n};\r\n\r\nexport const unsubscribeFromBudget = () => {\r\n  unsubscribe();\r\n};\r\n","import { Budget, BudgetPeriod, Transaction } from 'data/types';\r\n\r\nexport const addTransactionToBudget = (budgetToModify: Budget, newTransaction: Transaction): Budget => {\r\n  const previousPeriods = getPreviousPeriods(budgetToModify);\r\n  const currentPeriod = getCurrentPeriod(budgetToModify);\r\n  const updatedTransactions = [...currentPeriod.transactions, newTransaction];\r\n  const updatedCurrentPeriod = {\r\n    ...currentPeriod,\r\n    transactions: updatedTransactions,\r\n  };\r\n  const updatedBudget = {\r\n    ...budgetToModify,\r\n    periods: [...previousPeriods, updatedCurrentPeriod],\r\n  };\r\n\r\n  return updatedBudget;\r\n};\r\n\r\nexport const getCurrentPeriod = (budget: Budget): BudgetPeriod => budget.periods.slice(-1)[0];\r\n\r\nexport const getPreviousPeriods = (budget: Budget): BudgetPeriod[] => budget.periods.slice(0, -1);\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { StyledComponentProps, withStyles } from '@material-ui/core/styles';\r\nimport BudgetTable from 'components/BudgetTable';\r\nimport RemainingPeriodAmount from 'components/RemainingPeriodAmount';\r\nimport TransactionInput from 'components/TransactionInput';\r\nimport { fetchBudget, postBudget, subscribeToBudget, unsubscribeFromBudget } from 'data/api/budget';\r\nimport { getBudget, getCurrentPeriod } from 'data/selectors';\r\nimport StoreContext from 'data/state/StoreContext';\r\nimport { Budget, Transaction } from 'data/types';\r\nimport { addTransactionToBudget } from 'data/utils/budget';\r\nimport React, { FC, useContext, useEffect } from 'react';\r\n\r\nconst styles = (theme: any) => ({\r\n  paper: {\r\n    padding: '16px',\r\n    textAlign: 'center' as 'center',\r\n  },\r\n});\r\n\r\nconst BudgetPage: FC<StyledComponentProps> = ({ classes = {} }) => {\r\n  const { state, actionCreators } = useContext(StoreContext);\r\n  const budget = getBudget(state);\r\n  const currentPeriod = getCurrentPeriod(state);\r\n  const transactions = currentPeriod ? currentPeriod.transactions : [];\r\n  const startingAmount = currentPeriod ? currentPeriod.startingAmount : 0;\r\n\r\n  useEffect(() => {\r\n    subscribeToBudget('hb9zADJBVAd6Y3akSCig', snap => {\r\n      const updatedBudget = snap.data() as Budget | undefined;\r\n      if (updatedBudget) {\r\n        actionCreators.budgetLoaded(updatedBudget);\r\n      }\r\n    });\r\n\r\n    fetchBudget('hb9zADJBVAd6Y3akSCig').then(fetchedBudget => {\r\n      if (fetchedBudget) {\r\n        actionCreators.budgetLoaded(fetchedBudget);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribeFromBudget();\r\n    };\r\n  }, []);\r\n\r\n  if (!budget) {\r\n    return null;\r\n  }\r\n\r\n  const onSubmitTransaction = async (newTransaction: Transaction) => {\r\n    const modifiedBudget = addTransactionToBudget(budget, newTransaction);\r\n    postBudget(modifiedBudget);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <h1>Budgeteering</h1>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <RemainingPeriodAmount transactions={transactions} startingAmount={startingAmount} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <TransactionInput onSubmit={onSubmitTransaction} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <BudgetTable transactions={transactions} />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(BudgetPage);\r\n","import StoreContext from 'data/state/StoreContext';\r\nimport * as firebase from 'firebase';\r\nimport { useContext, useEffect } from 'react';\r\n\r\nconst useFirebaseAuth = () => {\r\n  const { actionCreators } = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .auth()\r\n      .getRedirectResult()\r\n      .then(result => {\r\n        if (!result.credential || !result.user) {\r\n          throw Error('Sign in does not have all info or was not started!');\r\n        }\r\n\r\n        const cred = result.credential as firebase.auth.OAuthCredential;\r\n        if (!cred.accessToken) {\r\n          throw Error('No access token for user!');\r\n        }\r\n\r\n        const { uid, displayName, email } = result.user;\r\n        actionCreators.currentUserLoaded({\r\n          id: uid,\r\n          name: displayName || email || 'Anonymous User',\r\n          email: email || '',\r\n          accessToken: cred.accessToken,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        const email = error.email;\r\n        const credential = error.credential;\r\n\r\n        console.warn(\r\n          `Failed to log user in. Code: ${errorCode}  Message: ${errorMessage}  Email: ${email}  Cred: ${JSON.stringify(\r\n            credential\r\n          )}`\r\n        );\r\n      });\r\n  }, []);\r\n};\r\n\r\nexport default useFirebaseAuth;\r\n","import { StyledComponentProps, withStyles } from '@material-ui/core/styles';\nimport PageAuth from 'components/Auth/PageAuth';\nimport BudgetPage from 'components/BudgetPage';\nimport { getMe } from 'data/selectors';\nimport StoreContext from 'data/state/StoreContext';\nimport useFirebaseAuth from 'hooks/useFirebaseAuth';\nimport React, { useContext } from 'react';\nimport './App.css';\n\nconst styles = (theme: any) => ({\n  appRoot: {\n    backgroundColor: '#f5f5f5',\n    height: '100%',\n    width: '100%',\n  },\n});\n\nconst App: React.FC<StyledComponentProps> = ({ classes = {} }) => {\n  const { state } = useContext(StoreContext);\n  const me = getMe(state);\n\n  useFirebaseAuth();\n\n  const appContent = me ? <BudgetPage /> : <PageAuth />;\n  return <div className={classes.appRoot}>{appContent}</div>;\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { StoreProvider } from 'data/state/StoreProvider';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { useActions } from 'data/actions';\r\nimport React, { FC, ReactNode, useEffect, useReducer } from 'react';\r\nimport budgeteeringReducer, { initialState } from './reducer';\r\nimport StoreContext from './StoreContext';\r\n\r\nexport interface StoreProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const StoreProvider: FC<StoreProviderProps> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(budgeteeringReducer, initialState);\r\n  const actionCreators = useActions(state, dispatch);\r\n\r\n  useEffect(() => {\r\n    console.log({ newState: state });\r\n  }, [state]);\r\n\r\n  return <StoreContext.Provider value={{ state, actionCreators }}>{children}</StoreContext.Provider>;\r\n};\r\n"],"sourceRoot":""}